
# First adverse event tables

## Data

::: panel-tabset

### Adverse Events

`df_adverse_events`

* 10 unique subjects

* multiple rows per subject


```{r}
#| echo: false
#| eval: true
head(df_adverse_events) |> gt::gt()
```


###  Patients

`df_patient_characteristics`

* 100 unique subjects

* 1 row per subject


```{r}
#| echo: false
#| eval: true
head(df_patient_characteristics) |> gt::gt()
```


:::



## Variable labels 

* A variable label is an attribute of a variable in a data frame.

* Where applicable, _variable labels_ (not _variable names_) are printed 
in {gtsummary} and {gtreg} tables.

* The example data in {gtreg} comes with variable labels; you can
also create your own via [`labelled::set_variable_labels()`](https://larmarange.github.io/labelled/reference/var_label.html).


::: columns

::: {.column width="50%"}

```{r}
#| echo: true
#| eval: false
str(df_patient_characteristics)
```

![](images/df_patient_characteristics_str_hl.PNG)


:::


::: {.column width="50%"}


```{r}
#| echo: true
#| eval: false
View(df_patient_characteristics)
```

![](images/df_patient_characterstics.PNG)


:::

:::



## First adverse event tables

![](images/gtreg_overview_first.svg)

## tbl_ae_count()

-   Count *all* AEs (not by maximum grade).

::: panel-tabset
### Code

```{r}
#| eval: false
df_adverse_events |> 
  tbl_ae_count(
    ae = adverse_event,
    soc = system_organ_class, 
    by = grade
  ) 
```

### Table

```{r}
#| eval: true
#| echo: false
df_adverse_events |> 
  tbl_ae_count(
    ae = adverse_event,
    soc = system_organ_class, 
    by = grade
  ) 
```

### Data

```{r}
#| eval: true
#| echo: false
df_adverse_events |> 
  select(adverse_event,system_organ_class, grade) |> 
  slice(1:10) |> 
  gt::gt()
```
:::

## tbl_ae()

-   Count AEs per subject by maximum grade.

::: panel-tabset
### Code

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2,3"
df_adverse_events |> 
  tbl_ae(
    id = patient_id,
    ae = adverse_event,
    soc = system_organ_class, 
    by = grade
  ) 
```

### Table

```{r}
#| echo: false
#| eval: true
df_adverse_events |> 
  tbl_ae(
    id = patient_id,
    ae = adverse_event,
    soc = system_organ_class, 
    by = grade
  ) 
```

### Data

```{r}
#| echo: false
#| eval: true
df_adverse_events |> 
 select(patient_id, adverse_event,system_organ_class, grade) |> 
 slice(1:10) |> 
 gt::gt() 
```
:::

## tbl_ae()

-   Count AEs per subject by maximum grade.

-   Supply `id_df` to achieve subject denominator.

::: panel-tabset
### Code

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2,4"
df_adverse_events |> 
  tbl_ae(
    id = patient_id,
    id_df = df_patient_characteristics,
    ae = adverse_event,
    soc = system_organ_class, 
    by = grade
  ) 
```

### Table

```{r}
#| echo: false
#| eval: true
df_adverse_events |> 
  tbl_ae(
    id = patient_id,
    id_df = df_patient_characteristics,
    ae = adverse_event,
    soc = system_organ_class, 
    by = grade
  ) 
```

### Data

::: columns
::: {.column width="65%"}
`df_adverse_events`

```{r}
#| echo: false
df_adverse_events |> 
  select(patient_id, adverse_event, system_organ_class, grade) |> 
  slice(1:5) |> 
  gt::gt()
```
:::

::: {.column width="35%"}
`df_patient_characteristics`

```{r}
#| echo: false
df_patient_characteristics |> 
  select(patient_id, trt) |> 
  slice(1:5) |> 
  gt::gt() 
```
:::
:::
:::

## tbl_ae() with strata

::: panel-tabset
### Code

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2,5"
df_adverse_events |> 
  tbl_ae(
    id = patient_id,
    id_df = df_patient_characteristics,
    strata = trt,
    ae = adverse_event,
    soc = system_organ_class, 
    by = grade
  ) 
```

### Table

```{r}
#| echo: false
#| eval: true
df_adverse_events |> 
  tbl_ae(
    id = patient_id,
    id_df = df_patient_characteristics,
    strata = trt,
    ae = adverse_event,
    soc = system_organ_class, 
    by = grade
  ) 
```

### Data

::: columns
::: {.column width="65%"}
`df_adverse_events`

```{r}
#| echo: false
df_adverse_events |> 
  select(patient_id, trt, adverse_event, system_organ_class, grade) |> 
  slice(1:5) |> 
  gt::gt()
```
:::

::: {.column width="35%"}
`df_patient_characteristics`

```{r}
#| echo: false
df_patient_characteristics |> 
  select(patient_id, trt) |> 
  slice(1:5) |> 
  gt::gt() 
```
:::
:::
:::


## tbl_ae_focus()

-   Count dichotomous AE attributes via `include`.

-   Supply `id_df` to achieve subject denominator.

::: panel-tabset
### Code

```{r}
#| echo: true
#| eval: false
#| code-line-numbers: "2,7"
df_adverse_events |> 
  tbl_ae_focus(
    id = patient_id,
    id_df = df_patient_characteristics,
    ae = adverse_event,
    soc = system_organ_class, 
    include = c(any_complication, grade3_complication)
  ) 
```

### Table

```{r}
#| echo: false
#| eval: true
df_adverse_events |> 
  tbl_ae_focus(
    id = patient_id,
    id_df = df_patient_characteristics,
    ae = adverse_event,
    soc = system_organ_class, 
    include = c(any_complication, grade3_complication)
  ) 
```

### Data

::: columns
::: {.column width="65%"}
`df_adverse_events`

```{r}
#| echo: false
df_adverse_events |> 
  select(patient_id, adverse_event, system_organ_class, any_complication, grade3_complication) |> 
  slice(1:5) |> 
  gt::gt()
```
:::

::: {.column width="35%"}
`df_patient_characteristics`

```{r}
#| echo: false
df_patient_characteristics |> 
  select(patient_id, trt) |> 
  slice(1:5) |> 
  gt::gt() 
```
:::
:::
:::



## Exercise 1

<br>

**Recommended:** Enter the dedicated RStudio Cloud work space (with packages pre-installed) to complete Exercise 1. It may still be helpful to peek at the [exercises web page](https://shannonpileggi.github.io/gtreg-workshop-rinpharma-2022/exercises.html){target="_blank"} to verify that your tables match the desired output.

[Click here to enter R in Pharma RStudio Cloud work space for {gtreg}](https://rstudio.cloud/spaces/299322/join?access_code=Vnp96stsVIDLiEJI7AtHAQ4GB1gsptQgnOGb99_N){target="_blank"}

<br>

**Otherwise:** Use your personal computer and follow along the [exercises on the
website](https://shannonpileggi.github.io/gtreg-workshop-rinpharma-2022/exercises.html){target="_blank"}. Challenge yourself not to peek at the code solutions until you have completed the exercise.

```{r}
#| echo: false
#| cache: false
countdown(minutes = 15, font_size = "1.5em")
```

